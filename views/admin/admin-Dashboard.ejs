<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Giftora Admin Dashboard</title>
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
        color: #333;
    }
      
    /* Main wrapper - contains everything */
    .main-wrapper {
        display: flex;
        min-height: 100vh;
        background-color: #f4f4f9;
    }

    .admin-icon {
        font-size: 1.2em;
        color: #2c3e50;
    }

    .admin-text {
        font-weight: 600;
        color: #2c3e50;
    }

    .search-toggle-btn {
        background: none;
        border: none;
        font-size: 1.1em;
        color: #666;
        cursor: pointer;
        padding: 8px;
        border-radius: 4px;
        transition: background-color 0.2s ease;
    }

    .search-toggle-btn:hover {
        background-color: #f0f0f0;
    }

    .dashboard h2 {
        margin-bottom: 20px;
        color: #2c3e50;
        font-size: 1.8em;
        text-align: center;
    }

    /* Stats cards - adapted to table-like for consistency */
    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
        gap: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .dashboard-card {
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border: 1px solid #ddd;
    }

    .card-full { grid-column: 1 / -1; }
    .card-half { grid-column: span 6; }
    .card-quarter { grid-column: span 3; }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #ddd;
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2c3e50;
    }

    .filter-dropdown {
        padding: 8px 12px;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        background: #f9fafb;
        font-size: 0.9rem;
        cursor: pointer;
    }

    .stat-card {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .stat-icon {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: white;
    }

    .icon-users { background: #3b82f6; }
    .icon-orders { background: #14b8a6; }
    .icon-sales { background: #f59e0b; }
    .icon-pending { background: #8b5cf6; }

    .stat-info .value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
    }

    .stat-info .label {
        font-size: 0.85rem;
        color: #64748b;
    }

    .chart-container {
        position: relative;
        height: 350px;
        background-color: white;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border-radius: 12px;
        margin: 20px 0;
    }

    .top-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .top-list li {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px;
        border-bottom: 1px solid #ddd;
    }

    .top-list li:last-child {
        border-bottom: none;
    }

    .list-name {
        font-size: 0.9rem;
        color: #475569;
    }

    .list-value {
        font-weight: 600;
        color: #1e293b;
        background: #f1f5f9;
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 0.85rem;
    }

    .navbar {
        background: white;
        padding: 15px 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .navbar-left {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .content-wrapper {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .dashboard {
        padding: 20px;
        flex: 1;
    }

    @media (max-width: 1024px) {
        .card-half, .card-quarter {
            grid-column: span 12;
        }
    }

    @media (max-width: 768px) {
        .dashboard-grid {
            grid-template-columns: 1fr;
        }
        .card-half, .card-quarter {
            grid-column: span 1;
        }
        .navbar {
            flex-direction: column;
            gap: 10px;
        }
    }
  </style>
</head>

<body>
  <div class="main-wrapper">
    <!-- Sidebar Navigation -->
    <%- include('../partials/admin/header.ejs') %>

    <!-- Main content area -->
    <div class="content-wrapper">
      <!-- Top Navbar -->
      <div class="navbar">
        <button type="button" class="toggle-sidebar mobile-toggle" aria-label="Toggle sidebar">
          <i class="fas fa-bars"></i>
        </button>
        <div class="navbar-left">
          <i class="fas fa-user-shield admin-icon"></i>
          <span class="admin-text">Admin</span>
        </div>
      </div>

      <!-- Dashboard -->
      <div class="dashboard">
        <h2 class="text-center">Dashboard</h2>
        <p class="text-center text-secondary mb-4">Welcome to Giftora Admin Dashboard - Key metrics and analytics overview.</p>
        <div class="row g-4">
          <!-- Stat Cards -->
          <div class="col-md-6 col-xl-3">
            <div class="stat-card">
              <div class="stat-icon icon-users"><i class="fas fa-users"></i></div>
              <div class="stat-info">
                <div class="value"><%= totalUsers.toLocaleString('en-IN') %></div>
                <div class="label">Total Users</div>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-xl-3">
            <div class="stat-card">
              <div class="stat-icon icon-orders"><i class="fas fa-box"></i></div>
              <div class="stat-info">
                <div class="value"><%= totalOrders.toLocaleString('en-IN') %></div>
                <div class="label">Total Orders</div>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-xl-3">
            <div class="stat-card">
              <div class="stat-icon icon-sales"><i class="fas fa-rupee-sign"></i></div>
              <div class="stat-info">
                <div class="value">₹<%= totalSales.toLocaleString('en-IN') %></div>
                <div class="label">Total Sales</div>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-xl-3">
            <div class="stat-card">
              <div class="stat-icon icon-pending"><i class="fas fa-hourglass-half"></i></div>
              <div class="stat-info">
                <div class="value"><%= pendingOrders.toLocaleString('en-IN') %></div>
                <div class="label">Pending Orders</div>
              </div>
            </div>
          </div>

          <!-- Sales Chart -->
          <div class="col-12">
            <div class="dashboard-card">
            <div class="card-header">
              <h3 class="card-title">Sales Overview</h3>
              <select id="filterSelect" class="filter-dropdown">
                <option value="monthly" <%= filter === 'monthly' ? 'selected' : '' %>>Monthly</option>
                <option value="yearly" <%= filter === 'yearly' ? 'selected' : '' %>>Yearly</option>
                <option value="daily" <%= filter === 'daily' ? 'selected' : '' %>>Daily</option>
              </select>
            </div>
            <div class="chart-container">
              <canvas id="salesChart"></canvas>
            </div>
            </div>
          </div>

          <!-- Top Products -->
          <div class="col-lg-6">
            <div class="dashboard-card">
            <div class="card-header">
              <h3 class="card-title">Top 10 Products</h3>
            </div>
            <div class="chart-container">
              <canvas id="productsChart"></canvas>
            </div>
            </div>
          </div>

          <!-- Top Categories -->
          <div class="col-lg-6">
            <div class="dashboard-card">
            <div class="card-header">
              <h3 class="card-title">Top 10 Categories</h3>
            </div>
            <div class="chart-container">
              <canvas id="categoriesChart"></canvas>
            </div>
            </div>
          </div>

          <!-- Top Customers -->
          <div class="col-12">
            <div class="dashboard-card">
            <div class="card-header">
              <h3 class="card-title">Top 10 Customers</h3>
            </div>
            <ul class="top-list">
              <% topCustomers.forEach(customer => { %>
                <li>
                  <span class="list-name"><i class="fas fa-user-circle" style="margin-right: 8px; color: #94a3b8;"></i><%= customer.customerName %></span>
                  <span class="list-value">₹<%= customer.totalSpent.toLocaleString('en-IN') %></span>
                </li>
              <% }) %>
            </ul>
            </div>
          </div>
        </div>
        <p class="text-center fst-italic text-secondary mt-4">If you'd like further customizations, let us know!</p>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script>
    const initialData = {
        salesReport: <%- JSON.stringify(salesReport || []) %>,
        topProducts: <%- JSON.stringify(topProducts || []) %>,
        topCategories: <%- JSON.stringify(topCategories || []) %>,
        topCustomers: <%- JSON.stringify(topCustomers || []) %>,
        pendingOrders: <%- pendingOrders || 0 %>
    };

    // helpers to map server response to chart arrays
      function itemsMap(list, nameKey) {
        const labels = list.map(i => i[nameKey] || 'Unknown');
        const values = list.map(i => i.soldQty || 0);
        return { labels, values };
      }

      // create/destroy/update helpers
      function createLineChart(ctx, labels, data, labelText = 'Sales') {
        const gradient = ctx.createLinearGradient(0, 0, 0, 400);
        gradient.addColorStop(0, 'rgba(59, 130, 246, 0.4)');
        gradient.addColorStop(1, 'rgba(59, 130, 246, 0)');
        if (!ctx) return;

        return new Chart(ctx, {
          type: 'line',
          data: { 
            labels, 
            datasets: [{ 
              label: labelText, 
              data, 
              borderColor: '#3b82f6', 
              backgroundColor: gradient,
              fill: true,
              tension: 0.4,
              pointBackgroundColor: '#3b82f6',
              pointBorderColor: '#fff',
              pointHoverRadius: 6,
              pointHoverBackgroundColor: '#fff',
              pointHoverBorderColor: '#3b82f6',
              pointHoverBorderWidth: 2
            }] 
          },
          options: { 
            responsive: true, 
            maintainAspectRatio: false, 
            scales: { 
              y: { 
                beginAtZero: true, 
                grid: { color: 'rgba(0,0,0,0.05)' },
                ticks: {
                    callback: function(value) {
                        return '₹' + value.toLocaleString('en-IN');
                    }
                }
              },
              x: { grid: { display: false } }
            },
            plugins: { 
              legend: { display: false },
              tooltip: {
                callbacks: {
                    label: function(context) {
                        return ` Sales: ₹${context.parsed.y.toLocaleString('en-IN')}`;
                    }
                }
              }
            }
          }
        });
      }
      function createBarChart(ctx, labels, data, labelText = 'Units') {
        return new Chart(ctx, {
          type: 'bar',
          data: { 
            labels, 
            datasets: [{ 
              label: labelText, 
              data, 
              backgroundColor: '#14b8a6',
              borderRadius: 4,
              barThickness: 12
            }] 
          },
          options: { 
            indexAxis: 'y', responsive: true, maintainAspectRatio: false, 
            scales: { 
              x: { 
                beginAtZero: true, 
                grid: { display: false } 
              },
              y: {
                grid: { color: 'rgba(0,0,0,0.05)' }
              }
            },
            plugins: { legend: { display: false } },
            
          }
        });
      }
      function updateChart(chart, labels, data) {
        if (!chart) return;
        chart.data.labels = labels;
        chart.data.datasets[0].data = data;
        chart.update();
      }

      // init charts using initialData injected in EJS
      let salesChart, productsChart, categoriesChart;
      (function init() {
        const s = initialData.salesReport;
        const p = itemsMap(initialData.topProducts, 'productName');
        const c = itemsMap(initialData.topCategories, 'categoryName');

        const salesCtx = document.getElementById('salesChart')?.getContext('2d');
        const productsCtx = document.getElementById('productsChart').getContext('2d');
        const categoriesCtx = document.getElementById('categoriesChart').getContext('2d');

        salesChart = createLineChart(salesCtx, s.labels, s.values, 'Total Sales');
        productsChart = createBarChart(productsCtx, p.labels, p.values, 'Units Sold');
        categoriesChart = createBarChart(categoriesCtx, c.labels, c.values, 'Units Sold');
      })();

      // handle filter change (AJAX)
      document.getElementById('filterSelect').addEventListener('change', async function () {
        const filter = this.value;
        try {
          const res = await fetch(`/admin/dashboard/data?filter=${encodeURIComponent(filter)}`);
          if (!res.ok) throw new Error('Network response not ok');
          const json = await res.json();

          // The backend now sends the complete chart data structure
          updateChart(salesChart, json.salesReport.labels, json.salesReport.values);

        } catch (err) {
          console.error('Dashboard fetch error', err);
          alert('Failed to load dashboard data. Check console.');
        }
      });

  </script>
</body>

</html>