<% function statusBadgeClass(status) { switch (status) { case 'Pending' :
    return 'bg-warning-subtle text-warning-emphasis' ; case 'Processing' :
    return 'bg-info-subtle text-info-emphasis' ; case 'Shipped' :
    return 'bg-primary-subtle text-primary-emphasis' ; case 'Delivered' :
    return 'bg-success-subtle text-success-emphasis' ; case 'Cancelled' :
    return 'bg-danger-subtle text-danger-emphasis' ; case 'Return Request' :
    return 'bg-warning-subtle text-warning-emphasis' ; case 'Returned' :
    return 'bg-secondary-subtle text-secondary-emphasis' ; default:
    return 'bg-secondary-subtle text-secondary-emphasis' ; } } %>
<!DOCTYPE html>

<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        [x-cloak] {
            display: none !important
        }
        .main-wrapper {
            display: flex;
            min-height: 100vh;
            background-color: #f8f9fa;
        }
        .content-wrapper {
            flex: 1;
            padding: 20px;
            background-color: #f8f9fa;
        }
 
        @media (max-width: 991.98px) {
            .table-responsive-cards thead {
                display: none;
            }
            .table-responsive-cards tbody,
            .table-responsive-cards tr,
            .table-responsive-cards td {
                display: block;
                width: 100%;
            }
            .table-responsive-cards tr {
                margin-bottom: 1rem;
                border: 1px solid #dee2e6;
                border-radius: .5rem;
                background-color: #fff;
                box-shadow: 0 1px 3px rgba(0,0,0,0.05);
            }
            .table-responsive-cards td {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: .75rem 1rem;
                border-bottom: 1px solid #f1f1f1;
                text-align: right;
            }
            .table-responsive-cards td:last-child {
                border-bottom: 0;
            }
            .table-responsive-cards td::before {
                content: attr(data-label);
                font-weight: 600;
                text-align: left;
                margin-right: 1rem;
                color: #495057;
            }
        }
    </style>
</head>

<body>
    <div class="main-wrapper">
        <!-- Include the admin sidebar -->
        <%- include('../partials/admin/header.ejs') %>

        <div class="content-wrapper">
            <!-- Controls/Top Bar -->
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h1 class="h4 fw-semibold mb-3">Order Management</h1>
                    <form method="GET" action="/admin/orders" id="filterForm">
                        <div class="row g-2 align-items-center">
                            <div class="col-lg-4">
                                <input type="text" name="search" id="searchInput" value="<%= query.search || '' %>" placeholder="Search Order ID, Name, Email" class="form-control">
                            </div>
                            <div class="col-sm-6 col-lg-2">
                                <select name="status" id="statusFilter" class="form-select">
                            <option <%=!query.status ? 'selected' : '' %>>All</option>
                            <option <%=query.status==='Pending' ? 'selected' : '' %>>Pending</option>
                            <option <%=query.status==='Processing' ? 'selected' : '' %>>Processing</option>
                            <option <%=query.status==='Shipped' ? 'selected' : '' %>>Shipped</option>
                            <option <%=query.status==='Delivered' ? 'selected' : '' %>>Delivered</option>
                            <option <%=query.status==='Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            <option <%=query.status==='Return Request' ? 'selected' : '' %>>Return Request</option>
                            <option <%=query.status==='Returned' ? 'selected' : '' %>>Returned</option>
                        </select>
                            </div>
                            <div class="col-sm-6 col-lg-2">
                                <select name="sort" id="sortFilter" class="form-select">
                            <option value="latest" <%=(!query.sort || query.sort==='latest' ) ? 'selected' : '' %>>Latest</option>
                            <option value="oldest" <%=query.sort==='oldest' ? 'selected' : '' %>>Oldest</option>
                        </select>
                            </div>
                            <div class="col-sm-6 col-lg-2 d-flex gap-2">
                                <button type="submit" class="btn btn-primary w-100">Search</button>
                                <a href="/admin/orders" id="clearBtn" class="btn btn-outline-secondary w-100">Clear</a>
                            </div>
                            <div class="col-sm-6 col-lg-2">
                                <a href="/admin/returns" class="btn btn-info w-100 d-flex align-items-center justify-content-center gap-2">
                                    Verify Returns
                                    <span id="returns-badge" class="badge bg-danger rounded-pill">0</span>
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- Orders Table -->
            <div class="table-responsive">
                <table class="table table-hover align-middle text-center table-responsive-cards">
                    <thead>
                        <tr class="table-light">
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>User</th>
                            <th>Status</th>
                            <th>Action</th>
                            <th>Change Status</th>
                        </tr>
                    </thead>
                    <tbody id="ordersTableBody">
                        <% if (orders && orders.length>0) { orders.forEach(order => { %>
                            <tr>
                                <td data-label="Order ID">
                                    <div class="d-flex align-items-center justify-content-end gap-1">
                                        <span class="font-monospace text-primary" style="cursor: pointer;" onclick="navigator.clipboard.writeText('<%= order.orderId %>'); showSwalCopy()">
                                            #ORD<%= order.orderId ? order.orderId.slice(-6) : '' %>
                                        </span>
                                        <button type="button" onclick="navigator.clipboard.writeText('<%= order.orderId %>'); showSwalCopy()" class="btn btn-sm btn-link text-secondary p-0">
                                            <i class="fas fa-copy"></i>
                                        </button>
                                    </div>
                                </td>
                                <td data-label="Date">
                                    <% if (order.createdOn) { %>
                                        <%= new Date(order.createdOn).toLocaleDateString('en-GB') %>
                                            <% } %>
                                </td>
                                <td data-label="User">
                                    <% if(order.userId) { %>
                                        <b class="d-block">
                                            <%= order.userId.firstName %>
                                                <%= order.userId.lastName %>
                                        </b>
                                        <span class="small text-muted">
                                            <%= order.userId.email %>
                                        </span>
                                        <% } else { %>
                                            <span class="fst-italic text-muted">User deleted</span>
                                            <% } %>
                                </td>
                                <td data-label="Status">
                                    <span class="status-badge badge rounded-pill <%= statusBadgeClass(order.status) %>">
                                        <%= order.status %>
                                    </span>
                                </td>
                                <td data-label="Action">
                                    <a href="/admin/view/orders/<%= order.orderId %>" class="btn btn-sm btn-outline-success">View</a>
                                </td>
                                <td data-label="Change Status">
                                    <div class="d-flex justify-content-end">
                                        <select onchange="saveStatus('<%= order.orderId %>', this.value)" id="status-<%= order.orderId %>" class="form-select form-select-sm" style="max-width: 140px;">
                                            <% const
                                                statuses=["Pending","Processing","Shipped","Delivered","Returned"]; statuses.forEach(s=>{ %>
                                                <option value="<%=s%>" <%=order.status===s?'selected':'' %>>
                                                    <%=s%>
                                                </option>
                                                <% }) %>
                                        </select>
                                    </div>
                                </td>
                            </tr>
                            <% }) } else { %>
                                <tr>
                                    <td colspan="6" class="text-center py-5 text-muted">No orders found.</td>
                                </tr>
                                <% } %>
                    </tbody>
                </table>
            </div>
            <!-- Pagination centered below -->
            <div id="paginationContainer" class="d-flex justify-content-center mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                    <% if (typeof totalPages !=='undefined' && totalPages> 0) { %>
                        <% if (currentPage > 1) { %>
                            <li class="page-item"><a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= query.search || '' %>&status=<%= query.status || 'All' %>&sort=<%= query.sort || 'latest' %>">Prev</a></li>
                        <% } else { %>
                            <li class="page-item disabled"><a class="page-link" href="#">Prev</a></li>
                        <% } %>

                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>"><a class="page-link" href="?page=<%= i %>&search=<%= query.search || '' %>&status=<%= query.status || 'All' %>&sort=<%= query.sort || 'latest' %>"><%= i %></a></li>
                        <% } %>

                        <% if (currentPage < totalPages) { %>
                            <li class="page-item"><a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= query.search || '' %>&status=<%= query.status || 'All' %>&sort=<%= query.sort || 'latest' %>">Next</a></li>
                        <% } else { %>
                            <li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
                        <% } %>
                    <% } %>
                    </ul>
                </nav>
            </div>

        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Util for colored badge class based on status
        function statusBadgeClass(status) {
            switch (status) {
                case 'Pending': return 'bg-warning-subtle text-warning-emphasis';
                case 'Processing': return 'bg-info-subtle text-info-emphasis';
                case 'Shipped': return 'bg-primary-subtle text-primary-emphasis';
                case 'Delivered': return 'bg-success-subtle text-success-emphasis';
                case 'Cancelled': return 'bg-danger-subtle text-danger-emphasis';
                case 'Return Request': return 'bg-warning-subtle text-warning-emphasis';
                case 'Returned': return 'bg-secondary-subtle text-secondary-emphasis';
                default: return 'bg-secondary-subtle text-secondary-emphasis';
            }
        }
        window.statusBadgeClass = statusBadgeClass;
    </script>
    <!-- AJAX for status badge and toast -->
    <script>
        fetch('/admin/returns/count').then(res => res.json()).then(data => {
            document.getElementById('returns-badge').innerText = data.count;
        })
        function showSwalToast(msg, type = 'success') {
            Swal.fire({
                toast: true, position: 'top-end', showConfirmButton: false,
                timer: 1800, timerProgressBar: true,
                icon: type, title: msg
            });
        }
        function showSwalCopy() {
            Swal.fire({
                toast: true, position: 'top-end', showConfirmButton: false,
                timer: 1200, timerProgressBar: true,
                icon: 'success', title: 'Order ID copied!'
            });
        }

        function saveStatus(orderId, newStatus) {
            fetch(`/admin/orders/${orderId}/status`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: newStatus })
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        showSwalToast('Status updated!');
                        // Find the row and update the badge dynamically
                        const row = document.querySelector(`#status-${orderId}`).closest('tr');
                        if (row) {
                            const badge = row.querySelector('.status-badge');
                            if (badge) {
                                badge.textContent = newStatus;
                                badge.className = `status-badge badge rounded-pill ${statusBadgeClass(newStatus)}`;
                            }
                        }
                    } else {
                        showSwalToast(data.message || 'Error', 'error');
                        // Revert the select dropdown if the update fails
                        const select = document.getElementById(`status-${orderId}`);
                        if (select) {
                            const originalStatus = select.closest('tr').querySelector('.status-badge').textContent.trim();
                            select.value = originalStatus;
                        }
                    }
                })
                .catch(() => {
                    showSwalToast('Update failed', 'error');
                });
        }

        // --- Dynamic Fetch Logic ---

        async function fetchOrders(page = 1) {
            const search = document.getElementById('searchInput').value;
            const status = document.getElementById('statusFilter').value;
            const sort = document.getElementById('sortFilter').value;

            const params = new URLSearchParams({ page, search, status, sort, isAjax: true });
            const url = `/admin/orders?${params.toString()}`;

            try {
                const response = await fetch(url);
                const html = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');

                const newTbody = doc.getElementById('ordersTableBody');
                const newPagination = doc.getElementById('paginationContainer');

                if (newTbody) document.getElementById('ordersTableBody').innerHTML = newTbody.innerHTML;
                if (newPagination) document.getElementById('paginationContainer').innerHTML = newPagination.innerHTML;

                // Update URL without reloading
                history.pushState({ page, search, status, sort }, '', `/admin/orders?${params.toString().replace('&isAjax=true', '')}`);
            } catch (error) {
                console.error('Failed to fetch orders:', error);
                showSwalToast('Could not load order data.', 'error');
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Handle form submission for filtering/searching
            document.getElementById('filterForm').addEventListener('submit', (e) => {
                e.preventDefault();
                fetchOrders(1);
            });

            // Handle clear button
            document.getElementById('clearBtn').addEventListener('click', (e) => {
                e.preventDefault();
                document.getElementById('searchInput').value = '';
                document.getElementById('statusFilter').value = 'All';
                document.getElementById('sortFilter').value = 'latest';
                fetchOrders(1);
            });

            // Handle pagination clicks
            document.getElementById('paginationContainer').addEventListener('click', (e) => {
                if (e.target.tagName === 'A') {
                    e.preventDefault();
                    const url = new URL(e.target.href);
                    const page = url.searchParams.get('page');
                    fetchOrders(page);
                }
            });
        });
    </script>
</body>

</html>