<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Password Management - E-commerce Store</title>
    <link rel="stylesheet" href="/styles/output.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Pacifico&family=Inter:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
    <style>
        * {
            font-family: 'Inter', 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .content-section {
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .font-display {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        .font-body {
            font-family: 'Inter', sans-serif;
        }

        .input-error-msg {
            font-size: 0.8rem;
            margin-top: 0.25rem;
            color: #ef4444;
            display: none;
        }

        .input-field.error {
            border-color: #ef4444;
        }

        .input-field.error:focus {
            border-color: #ef4444;
            box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2);
        }

        .strength-bar {
            height: 6px;
            border-radius: 3px;
            transition: all 0.3s ease;
        }

        .strength-text {
            font-size: 0.8rem;
            font-weight: 500;
        }

        .loader {
            border-top-color: #ffffff;
            animation: spin 1s linear infinite;
        }
    </style>
</head>

<body class="bg-gray-50 min-h-screen">
    <%- include('../partials/user/newheader.ejs') %>

        <!-- Mobile Menu Overlay -->
        <div id="mobile-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-40 hidden md:hidden"></div>

        <!-- Main Container -->
        <div class="max-w-[1440px] mx-auto px-4 sm:px-6 lg:px-8 py-12">
            <div class="flex flex-col md:flex-row gap-8">
                <!-- Sidebar -->
                <%- include('../partials/user/myaccountSidebar.ejs') %>

                    <!-- Main Content -->
                    <main
                        class="flex-1 bg-white rounded-lg shadow-lg border border-gray-200 transition-all duration-300 hover:shadow-xl">
                        <!-- Breadcrumb -->
                        <div class="px-6 py-4 border-b border-gray-200">
                            <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-4">
                                <a href="/" class="hover:text-gray-700 transition-colors">Home</a>
                                <i class="ri-arrow-right-s-line text-gray-400"></i>
                                <a href="/account/profile" class="hover:text-gray-700 transition-colors">My Account</a>
                                <i class="ri-arrow-right-s-line text-gray-400"></i>
                                <span class="text-gray-900">Change Password</span>
                            </nav>
                            <h1 class="text-2xl font-display text-gray-900">Password Management</h1>
                        </div>

                        <!-- Content Area -->
                        <div class="p-6">
                            <!-- Password Section -->
                            <div id="password-content" class="content-section">
                                <div class="max-w-lg mx-auto bg-gray-50 rounded-lg p-6 sm:p-8 border border-gray-200">
                                    <h2 class="text-xl font-semibold text-gray-800 mb-2">Change Your Password</h2>
                                    <p class="text-sm text-gray-600 mb-6">For security, please do not share your
                                        password with anyone.</p>

                                    <form id="passwordChangeForm" class="space-y-5">
                                        <!-- Current Password -->
                                        <div>
                                            <label for="currentPassword"
                                                class="block text-sm font-medium text-gray-700 mb-1">Current
                                                Password</label>
                                            <div class="relative">
                                                <input type="password" id="currentPassword" name="currentPassword"
                                                    class="input-field w-full px-4 py-2.5 border border-gray-300 rounded-lg pr-10 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                                                    autocomplete="current-password" />
                                                <i class="ri-eye-off-line toggle-password absolute right-3 top-1/2 -translate-y-1/2 cursor-pointer text-gray-500 hover:text-gray-700"
                                                    onclick="togglePassword('currentPassword')"></i>
                                            </div>
                                            <p id="currentPasswordError" class="input-error-msg">Please enter your
                                                current password.</p>
                                        </div>

                                        <!-- New Password -->
                                        <div>
                                            <label for="newPassword"
                                                class="block text-sm font-medium text-gray-700 mb-1">New
                                                Password</label>
                                            <div class="relative">
                                                <input type="password" id="newPassword" name="newPassword"
                                                    class="input-field w-full px-4 py-2.5 border border-gray-300 rounded-lg pr-10 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                                                    autocomplete="new-password" />
                                                <i class="ri-eye-off-line toggle-password absolute right-3 top-1/2 -translate-y-1/2 cursor-pointer text-gray-500 hover:text-gray-700"
                                                    onclick="togglePassword('newPassword')"></i>
                                            </div>
                                            <p id="newPasswordError" class="input-error-msg">Password must be at least 8
                                                characters.</p>
                                        </div>

                                        <!-- Password Strength Indicator -->
                                        <div class="space-y-1">
                                            <div class="flex justify-between items-center">
                                                <span class="text-xs text-gray-500">Password strength:</span>
                                                <span id="strength-text" class="strength-text text-gray-500"></span>
                                            </div>
                                            <div class="w-full bg-gray-200 rounded-full h-1.5">
                                                <div id="strength-bar" class="strength-bar w-0"></div>
                                            </div>
                                        </div>

                                        <!-- Confirm Password -->
                                        <div>
                                            <label for="confirmPassword"
                                                class="block text-sm font-medium text-gray-700 mb-1">Confirm New
                                                Password</label>
                                            <div class="relative">
                                                <input type="password" id="confirmPassword" name="confirmPassword"
                                                    class="input-field w-full px-4 py-2.5 border border-gray-300 rounded-lg pr-10 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                                                    autocomplete="new-password" />
                                                <i class="ri-eye-off-line toggle-password absolute right-3 top-1/2 -translate-y-1/2 cursor-pointer text-gray-500 hover:text-gray-700"
                                                    onclick="togglePassword('confirmPassword')"></i>
                                            </div>
                                            <p id="confirmPasswordError" class="input-error-msg">Passwords do not match.
                                            </p>
                                        </div>

                                        <!-- Action Buttons -->
                                        <div class="flex justify-end gap-4 pt-4">
                                            <button type="button" onclick="cancelPasswordChange()"
                                                class="px-6 py-2.5 border border-gray-300 rounded-lg text-sm font-semibold text-gray-700 hover:bg-gray-100 transition-colors">Cancel</button>
                                            <button type="submit" id="saveButton"
                                                class="bg-blue-600 text-white px-6 py-2.5 rounded-lg text-sm font-semibold hover:bg-blue-700 transition-colors flex items-center justify-center min-w-[130px]">
                                                <span class="btn-text">Save Changes</span>
                                                <span class="loader-container hidden">
                                                    <div class="loader w-4 h-4 border-2 border-gray-400 rounded-full">
                                                    </div>
                                                </span>
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </main>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

        <script>
            const form = document.getElementById('passwordChangeForm');
            const currentPassword = document.getElementById('currentPassword');
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');
            const saveButton = document.getElementById('saveButton');
            const strengthBar = document.getElementById('strength-bar');
            const strengthText = document.getElementById('strength-text');

            // Password toggle function
            function togglePassword(inputId) {
                const input = document.getElementById(inputId);
                const icon = input.nextElementSibling;
                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('ri-eye-off-line');
                    icon.classList.add('ri-eye-line');
                } else {
                    input.type = 'password';
                    icon.classList.remove('ri-eye-line');
                    icon.classList.add('ri-eye-off-line');
                }
            }

            // Cancel password change
            function cancelPasswordChange() {
                document.getElementById('passwordChangeForm').reset();
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'info',
                    title: 'Password changes cancelled',
                    showConfirmButton: false,
                    timer: 1500,
                    background: '#6B7280',
                    color: '#fff'
                }).then(() => {
                    window.location.href = '/account/profile'
                });
            }

            // Password strength checker
            function checkPasswordStrength(password) {
                let score = 0;
                if (password.length >= 8) score++;
                if (/[A-Z]/.test(password)) score++;
                if (/[a-z]/.test(password)) score++;
                if (/[0-9]/.test(password)) score++;
                if (/[^A-Za-z0-9]/.test(password)) score++;

                let strength = { text: '', color: '', width: '0%' };
                switch (score) {
                    case 0:
                    case 1:
                    case 2:
                        strength = { text: 'Weak', color: 'bg-red-500', width: '25%' };
                        break;
                    case 3:
                        strength = { text: 'Medium', color: 'bg-yellow-500', width: '50%' };
                        break;
                    case 4:
                        strength = { text: 'Strong', color: 'bg-blue-500', width: '75%' };
                        break;
                    case 5:
                        strength = { text: 'Very Strong', color: 'bg-green-500', width: '100%' };
                        break;
                }
                if (password.length === 0) {
                    strength = { text: '', color: '', width: '0%' };
                }
                strengthBar.className = `strength-bar ${strength.color}`;
                strengthBar.style.width = strength.width;
                strengthText.textContent = strength.text;
                strengthText.className = `strength-text ${strength.color.replace('bg-', 'text-')}`;
            }

            // Input validation
            function validateInput(input, errorEl, validationFn) {
                if (!validationFn(input.value.trim())) {
                    input.classList.add('error');
                    errorEl.style.display = 'block';
                    return false;
                } else {
                    input.classList.remove('error');
                    errorEl.style.display = 'none';
                    return true;
                }
            }

            newPassword.addEventListener('input', () => {
                checkPasswordStrength(newPassword.value);
                validateInput(newPassword, document.getElementById('newPasswordError'), val => val.length >= 8);
                if (confirmPassword.value) {
                    validateInput(confirmPassword, document.getElementById('confirmPasswordError'), val => val === newPassword.value);
                }
            });

            confirmPassword.addEventListener('input', () => {
                validateInput(confirmPassword, document.getElementById('confirmPasswordError'), val => val === newPassword.value);
            });

            currentPassword.addEventListener('input', () => {
                validateInput(currentPassword, document.getElementById('currentPasswordError'), val => val.length > 0);
            });

            // Form submission handler
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                const isCurrentValid = validateInput(currentPassword, document.getElementById('currentPasswordError'), val => val.length > 0);
                const isNewValid = validateInput(newPassword, document.getElementById('newPasswordError'), val => val.length >= 8);
                const isConfirmValid = validateInput(confirmPassword, document.getElementById('confirmPasswordError'), val => val === newPassword.value);

                if (!isCurrentValid || !isNewValid || !isConfirmValid) {
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: 'Please fix the errors before submitting.',
                        showConfirmButton: false,
                        timer: 3000,
                        background: '#EF4444',
                        color: '#fff'
                    });
                    return;
                }

                // Toggle button state to loading
                saveButton.disabled = true;
                saveButton.querySelector('.btn-text').classList.add('hidden');
                saveButton.querySelector('.loader-container').classList.remove('hidden');

                try {
                    const response = await fetch('/account/change/password', {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            currentPassword: currentPassword.value.trim(),
                            newPassword: newPassword.value.trim(),
                            confirmPassword: confirmPassword.value.trim(),
                        })
                    });

                    const data = await response.json();

                    if (response.ok && data.success) {
                        document.getElementById('passwordChangeForm').reset();
                        checkPasswordStrength('');
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Password updated successfully!',
                            showConfirmButton: false,
                            timer: 3000,
                            background: '#10B981',
                            color: '#fff'
                        }).then(() => {
                            window.location.href = '/account/profile';
                        });
                    } else {
                        let errorMessage = data.message || 'Failed to update password.';
                        if (response.status === 401) {
                            errorMessage = 'Current password is incorrect.';
                        } else if (response.status === 400) {
                            errorMessage = data.message || 'Invalid request. Please try again.';
                        }
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: errorMessage,
                            showConfirmButton: false,
                            timer: 3000,
                            background: '#EF4444',
                            color: '#fff'
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: 'Network error. Please check your connection and try again.',
                        showConfirmButton: false,
                        timer: 3000,
                        background: '#EF4444',
                        color: '#fff'
                    });
                } finally {
                    // Re-enable button
                    saveButton.disabled = false;
                    saveButton.querySelector('.btn-text').classList.remove('hidden');
                    saveButton.querySelector('.loader-container').classList.add('hidden');
                }
            });
        </script>


</body>

</html>