<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Wishlist</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.6.0/fonts/remixicon.css" rel="stylesheet">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        * {
            font-family: 'Inter', 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .content-section {
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .wishlist-item {
            transition: all 0.3s ease;
            font-family: 'Inter', sans-serif;
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }


        .wishlist-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
        }

        .quantity-btn {
            transition: all 0.2s ease-in-out;
        }

        .quantity-btn:hover {
            background-color: #e5e7eb;
        }

        .remove-btn:hover {
            color: #ef4444;
        }

        .font-display {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        .font-body {
            font-family: 'Inter', sans-serif;
            font-weight: 400;
        }

        .font-medium {
            font-family: 'Inter', sans-serif;
            font-weight: 500;
        }

        .font-semibold {
            font-family: 'Inter', sans-serif;
            font-weight: 600;
        }
    </style>
</head>

<body>
    <!-- Header -->
    <%- include('../partials/user/newheader.ejs') %>

        <!-- Main Container -->
        <div class="container-fluid mt-4">
            <div class="row g-3">
                <!-- Sidebar -->
                <div class="col-md-4 col-lg-3">
                    <%- include('../partials/user/myaccountSidebar.ejs') %>
                </div>

                    <!-- Main Content -->
                    <main class="col-md-8 col-lg-9">
                        <div class="bg-white rounded-lg shadow-sm border p-3 p-md-4 h-100">
                        <!-- Breadcrumb -->
                        <div class="border-bottom pb-3 mb-4">
                            <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                  <li class="breadcrumb-item"><a href="/">Home</a></li>
                                  <li class="breadcrumb-item"><a href="/account/profile">My Account</a></li>
                                  <li class="breadcrumb-item active" aria-current="page">Wishlist</li>
                                </ol>
                            </nav>
                            <h1 class="h4 fw-semibold text-dark">My Wishlist</h1>
                        </div>

                        <!-- Content Area -->
                        <div class="content-section">
                            <!-- Empty Wishlist State -->


                            <div id="wishlist-empty-box"
                                class="text-center py-5 <%= wishlistItem && wishlistItem.length ? 'd-none' : '' %>">
                                <div class="mx-auto" style="max-width: 28rem;">
                                    <i class="ri-heart-line text-secondary" style="font-size: 3rem;"></i>
                                    <h3 class="h5 fw-medium text-dark my-3">Your wishlist is empty</h3>
                                    <p class="text-muted mb-4">
                                        Start adding items you love to your wishlist and they'll appear here.
                                    </p>
                                    <a href="/viewProducts"
                                        class="btn btn-primary">
                                        Continue Shopping
                                    </a>
                                </div>
                            </div>

                            <!-- Wishlist Items Container -->
                            <div class="list-group list-group-flush">
                                <% wishlistItem.reverse().forEach((item, index)=> { %>
                                    <div class="list-group-item wishlist-item px-0 py-3"
                                        data-item-id="<%= item._id %>">
                                        <div class="d-flex align-items-start gap-3">
                                            <!-- Product Image -->
                                            <div class="flex-shrink-0">
                                                <img src="<%= item.image %>" alt="<%= item.name %>"
                                                    style="width: 80px; height: 80px; object-fit: cover;" class="rounded-3">
                                            </div>

                                            <!-- Product Details -->
                                            <div class="flex-grow-1">
                                                <h3 class="h6 fw-medium text-dark mb-1">
                                                    <%= item.name %>
                                                </h3>
                                                <p class="small text-muted mb-1">₹<%=
                                                        item.price.toLocaleString() %> per item</p>
                                                <p
                                                    class="small <%= item.stock > 0 ? 'text-success' : 'text-danger' %>">
                                                    <%= item.stock %> in stock
                                                </p>
                                            </div>

                                            <!-- Price and Actions -->
                                            <div class="d-flex flex-column align-items-end gap-2 ms-auto">
                                                <span class="h5 fw-bold text-dark mb-0">₹<%=
                                                        item.price.toLocaleString() %></span>
                                                <div class="d-flex gap-2">
                                                    <% const isInStock=item.stock> 0; %>
                                                        <button onclick="addToCart(this)" data-id="<%= item._id %>"
                                                            <%=!isInStock ? 'disabled' : '' %>
                                                            class="btn btn-sm <%= isInStock ? 'btn-primary' : 'btn-secondary' %>">
                                                                <%= isInStock ? 'Add to Cart' : 'Out of Stock' %>
                                                        </button>
                                                        <button onclick="removeFromWishlist('<%= item._id %>')"
                                                            class="btn btn-sm btn-outline-danger">
                                                            <i class="ri-delete-bin-line"></i>
                                                        </button>
                                                        <button
                                                            onclick="window.location.href='/productsDetails/<%= item._id %>'"
                                                            class="btn btn-sm btn-outline-secondary">
                                                            <i class="ri-eye-line"></i>
                                                        </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                        </div>
                        </div>
                    </main>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // Function to show the empty wishlist card with animation
            function showEmptyWishlistCard() {
                const remainingItems = document.querySelectorAll('.wishlist-item').length;
                console.log("items", remainingItems)
                if (remainingItems === 0) {
                    console.log("ji")
                    const emptyBox = document.getElementById('wishlist-empty-box');
                    console.log(emptyBox)
                    if (emptyBox) {
                        emptyBox.classList.remove('d-none');
                        emptyBox.classList.add('fade-in');
                    } else {
                        emptyBox.classList.add('d-none');
                    }
                }
            }

            async function addToCart(button) {
                const productId = button.getAttribute('data-id');
                try {
                    const response = await fetch('/cart', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, quantity: 1 })
                    });
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Product added to cart',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                        updateCartCount();
                        const wishlistItem = button.closest('.wishlist-item');
                        if (wishlistItem) {
                            // Add fade-out animation
                            wishlistItem.classList.add('opacity-0', 'translate-x-4', 'transition-all', 'duration-500');
                            setTimeout(() => {
                                wishlistItem.remove();
                                showEmptyWishlistCard(); // Check if wishlist is empty
                            }, 500);
                        }
                    } else {
                        if (data.message === 'User not logged in') {
                            window.location.href = '/login';
                        } else {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: data.message || 'Could not add product to cart',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            });
                        }
                    }
                } catch (err) {
                    console.error(err);
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: 'Something went wrong',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });
                }
            }

            async function removeFromWishlist(productId) {
                Swal.fire({
                    title: 'Remove from Wishlist?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#ef4444',
                    cancelButtonColor: '#6b7280',
                    confirmButtonText: 'Yes, remove it!'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/wishlist/remove/${productId}`, {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' }
                            });
                            const result = await response.json();
                            if (response.ok) {
                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    icon: 'success',
                                    title: `${result.itemName || 'Item'} removed from wishlist`,
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true
                                }).then(() => {

                                    const item = document.querySelector(`.wishlist-item[data-item-id="${productId}"]`);
                                    if (item) {
                                        // Add fade-out animation
                                        item.classList.add('opacity-0', 'translate-x-4', 'transition-all', 'duration-500');
                                        setTimeout(() => {

                                            item.remove();
                                            showEmptyWishlistCard(); // Check if wishlist is empty
                                        }, 500);
                                    }
                                });
                            } else {
                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    icon: 'error',
                                    title: result.message || 'Failed to remove from wishlist',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true
                                });
                            }
                        } catch (error) {
                            console.error('Error removing from wishlist:', error);
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: 'Error removing from wishlist',
                                showConfirmButton: false,
                                timer: 2000,
                                timerProgressBar: true
                            });
                        }
                    }
                });
            }
        </script>
</body>
</html>