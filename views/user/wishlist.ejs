<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wishlist</title>
    <link rel="stylesheet" href="/styles/output.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.6.0/fonts/remixicon.css" rel="stylesheet">

    <style>
        * {
            font-family: 'Inter', 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .content-section {
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .wishlist-item {
            transition: all 0.3s ease;
            font-family: 'Inter', sans-serif;
        }

        .wishlist-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
        }

        .quantity-btn {
            transition: all 0.2s ease-in-out;
        }

        .quantity-btn:hover {
            background-color: #e5e7eb;
        }

        .remove-btn:hover {
            color: #ef4444;
        }

        .font-display {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        .font-body {
            font-family: 'Inter', sans-serif;
            font-weight: 400;
        }

        .font-medium {
            font-family: 'Inter', sans-serif;
            font-weight: 500;
        }

        .font-semibold {
            font-family: 'Inter', sans-serif;
            font-weight: 600;
        }
    </style>
</head>

<body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <%- include('../partials/user/newheader.ejs') %>

        <!-- Main Container -->
        <div class="max-w-[1440px] mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex flex-col lg:flex-row gap-8">
                <!-- Sidebar -->
                <%- include('../partials/user/myaccountSidebar.ejs') %>

                    <!-- Main Content -->
                    <main class="flex-1 bg-white rounded-lg shadow-sm border border-gray-200">
                        <!-- Breadcrumb -->
                        <div class="px-8 py-6 border-b border-gray-200">
                            <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-4">
                                <a href="/" class="hover:text-gray-700 transition-colors">Home</a>
                                <i class="ri-arrow-right-s-line text-gray-400"></i>
                                <a href="/account/profile" class="hover:text-gray-700 transition-colors">My Account</a>
                                <i class="ri-arrow-right-s-line text-gray-400"></i>
                                <span class="text-gray-900">Wishlist</span>
                            </nav>
                            <h1 class="text-2xl font-display text-gray-900">My Wishlist</h1>
                        </div>

                        <!-- Content Area -->
                        <div class="p-8 content-section">
                            <!-- Empty Wishlist State -->
                            <% if (!wishlistItem || wishlistItem.length===0) { %>
                                <div id="wishlist-empty-box" class="bg-white rounded-lg p-12 text-center <%= wishlistItem.length ? 'hidden' : '' %>">
                                    <div class="max-w-md mx-auto">
                                        <i class="ri-heart-line text-gray-400 text-4xl mx-auto mb-4"></i>
                                        <h3 class="text-lg font-medium text-gray-900 mb-2">Your wishlist is empty</h3>
                                        <p class="text-gray-600 mb-6 font-body">
                                            Start adding items you love to your wishlist and they'll appear here.
                                        </p>
                                        <a href="/viewProducts"
                                            class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200">
                                            Continue Shopping
                                        </a>
                                    </div>
                                </div>

                                <% } else { %>
                                    <!-- Wishlist Items Container -->
                                    <!-- Wishlist Items Container -->
                                    <div class="bg-white rounded-lg">
                                        <% wishlistItem.reverse().forEach((item, index)=> { %>
                                            <div class="wishlist-item p-6 <%= index !== wishlistItem.length - 1 ? 'border-b border-gray-200' : '' %>"
                                                data-item-id="<%= item._id %>">
                                                <div class="flex items-start space-x-4">
                                                    <!-- Product Image -->
                                                    <div class="flex-shrink-0">
                                                        <img src="<%= item.image %>" alt="<%= item.name %>" class="w-20 h-20 object-cover rounded-lg">
                                                    </div>
                                    
                                                    <!-- Product Details -->
                                                    <div class="flex-1 min-w-0">
                                                        <h3 class="text-lg font-medium text-gray-900 mb-2">
                                                            <%= item.name %>
                                                        </h3>
                                                        <p class="text-sm text-gray-500 mb-2 font-body">₹<%= item.price.toLocaleString() %> per item</p>
                                                        <p class="text-sm <%= item.stock > 0 ? 'text-green-600' : 'text-red-600' %> font-body">
                                                            <%= item.stock %> in stock
                                                        </p>
                                                    </div>
                                    
                                                    <!-- Price and Actions -->
                                                    <div class="flex flex-col items-end space-y-3">
                                                        <span class="text-xl font-bold text-gray-900">₹<%= item.price.toLocaleString() %></span>
                                                        <div class="flex space-x-2">
                                                            <% const isInStock=item.stock> 0; %>
                                                                <button onclick="addToCart(this)" data-id="<%= item._id %>" <%=!isInStock ? 'disabled' : ''
                                                                    %>
                                                                    class="px-4 py-2 <%= isInStock ? 'bg-blue-600 hover:bg-blue-700 text-white'
                                                                        : 'bg-gray-100 text-gray-400 cursor-not-allowed' %> font-medium text-sm rounded-lg
                                                                        transition-colors duration-200">
                                                                        <%= isInStock ? 'Add to Cart' : 'Out of Stock' %>
                                                                </button>
                                                                <button onclick="removeFromWishlist('<%= item._id %>')"
                                                                    class="remove-btn p-2 text-gray-400 hover:text-red-500 transition-colors duration-200">
                                                                    <i class="ri-delete-bin-line w-5 h-5"></i>
                                                                </button>
                                                                <button onclick="window.location.href='/productsDetails/<%= item._id %>'"
                                                                    class="p-2 text-gray-400 hover:text-blue-500 transition-colors duration-200">
                                                                    <i class="ri-eye-line w-5 h-5"></i>
                                                                </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <% }); %>
                                    </div>

                                  
                                            <% } %>
                        </div>
                    </main>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
           

            async function addToCart(button) {
                const productId = button.getAttribute('data-id');
                try {
                    const response = await fetch('/cart/addToCart', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, quantity: 1 })
                    });
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Product added to cart',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                        updateCartCount();
                         const wishlistItem = button.closest('.wishlist-item');
                         if (wishlistItem) wishlistItem.remove();
                    } else {
                        if (data.message === 'User not logged in') {
                            window.location.href = '/login';
                        } else {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: data.message || 'Could not add product to cart',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            });
                        }
                    }
                } catch (err) {
                    console.error(err);
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: 'Something went wrong',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });
                }
            }

            async function removeFromWishlist(productId) {
                Swal.fire({
                    title: 'Remove from Wishlist?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#ef4444',
                    cancelButtonColor: '#6b7280',
                    confirmButtonText: 'Yes, remove it!',
                    cancelButtonText: 'Cancel',
                    customClass: {
                        popup: 'border border-red-200 shadow-xl rounded-xl p-5',
                        confirmButton: 'bg-red-500 hover:bg-red-600 text-white px-5 py-2 rounded-md mr-2',
                        cancelButton: 'bg-gray-500 hover:bg-gray-600 text-white px-5 py-2 rounded-md'
                    },
                    buttonsStyling: false
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/wishlist/remove/${productId}`, {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' }
                            });
                            const result = await response.json();
                            if (response.ok) {
                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    icon: 'success',
                                    title: `${result.itemName || 'Item'} removed from wishlist`,
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true
                                }).then(() => {
                                     const item = document.querySelector(`.wishlist-item[data-item-id="${productId}"]`);
                                    if (item) {
                                        // Add fade-out animation
                                        item.classList.add('opacity-0', 'translate-x-4', 'transition-all', 'duration-500');

                                        setTimeout(() => {
                                            item.remove();

                                            // After removing, check if any items left
                                            const remaining = document.querySelectorAll('.wishlist-item');
                                            if (remaining.length === 0) {
                                                const emptyBox = document.getElementById('wishlist-empty-box');
                                                if (emptyBox) {
                                                    emptyBox.classList.remove('hidden');
                                                    emptyBox.classList.add('fade-in'); // optional class for animation
                                                }
                                            }
                                        }, 500);
                                    }
                                });
                            } else {
                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    icon: 'error',
                                    title: result.message || 'Failed to remove from wishlist',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true
                                });
                            }
                        } catch (error) {
                            console.error('Error removing from wishlist:', error);
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: 'Error removing from wishlist',
                                showConfirmButton: false,
                                timer: 2000,
                                timerProgressBar: true
                            });
                        }
                    }
                });
            }
        </script>
</body>

</html>