<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <link href="/styles/output.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.tutorialjinni.com/sweetalert2/11.14.3/sweetalert2.min.css" />
    <style>
        /* Custom styles for header image and layout */
        .header-image {
            width: 16rem;
            height: 8rem;
            object-fit: contain;
        }

        .content-wrapper {
            display: flex;
            gap: 1.5rem;
            max-width: 80rem;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        .sidebar {
            width: 16rem;
            background-color: #f9fafb;
            border-radius: 0.5rem;
            padding: 1.5rem;
        }

        .main-content {
            flex: 1;
        }

        @media (max-width: 768px) {
            .content-wrapper {
                flex-direction: column;
            }

            .sidebar {
                width: 100%;
            }

            .main-content {
                width: 100%;
            }
        }

        /* Status badge styles */
        .status-badge {
            padding: 0.15rem 0.6em;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 500;
            text-align: center;
            display: inline-block;
        }
    </style>
</head>

<body class="bg-gray-100 min-h-screen">
    <!-- Header -->
    <%- include("../partials/user/newheader.ejs") %>

        <div class="content-wrapper">
            <!-- Main Content -->
            <main class="main-content">
                <div class="flex justify-between items-center mb-6">
                    <h1 class="text-2xl font-semibold text-gray-800">My Orders</h1>
                    <div class="flex gap-4">
                        <a href="/orders"
                            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition">Back to
                            my order</a>
                        <% if (order) { %>
                            <% if (order.status==='Cancelled' ) { %>
                                <span
                                    class="px-5 py-2 rounded bg-red-100 text-red-600 font-medium border border-red-200">Order
                                    Cancelled</span>
                                <% } else if (order.status==='Delivered' ) { %>
                                    <% if (order.returnStatus) { %>
                                        <span class="px-4 py-2 bg-gray-200 text-gray-700 rounded font-medium">
                                            Return <%= order.returnStatus %>
                                        </span>
                                        <% }else if(order.status==='Delivered' && !orderHasReturn) { %>
                                            <button id="return-order-btn"
                                                class="px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 transition font-medium"
                                                data-order-id="<%= order.orderId %>">
                                                Return Order
                                            </button>
                                            <% } %>
                                                <% } else if (order.status==='Pending' || order.status==='Shipping' ) {
                                                    %>
                                                    <button id="cancelAllOrders"
                                                        class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition font-medium"
                                                        data-order-id="<%= order.orderId %>">Cancel
                                                        All Orders</button>
                                                    <% } %>
                                                        <% } %>
                    </div>
                </div>

                <% if (order) { %>
                    <div class="space-y-6">
                        <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6">
                            <!-- User Info -->
                            <% if (user) { %>
                                <div class="mb-4">
                                    <h3 class="text-md font-semibold text-gray-800 mb-1">Customer Details</h3>
                                    <div class="text-gray-700 text-sm">
                                        <div><span class="font-medium">Name:</span>
                                            <%= user.firstName %>
                                        </div>
                                        <div><span class="font-medium">Email:</span>
                                            <%= user.email %>
                                        </div>
                                    </div>
                                </div>
                                <% } %>
                                    <!-- Order Info & Status/Price Side by Side -->
                                    <div class="mb-4 flex flex-col md:flex-row md:justify-between md:items-start gap-6">
                                        <!-- Left: Order Info -->
                                        <div class="flex-1">
                                            <h3 class="text-md font-semibold text-gray-800 mb-1">Order Info</h3>
                                            <div class="text-gray-700 text-sm space-y-1">
                                                <div><span class="font-medium">Order ID:</span> <span
                                                        class="text-gray-800">
                                                        <%= order.orderId %>
                                                    </span></div>
                                                <div><span class="font-medium">Order Date:</span> <span
                                                        class="text-gray-800">
                                                        <%= new Date(order.createdOn).toLocaleString('en-US', {
                                                            dateStyle: 'medium' , timeStyle: 'short' }) %>
                                                    </span></div>
                                                <div><span class="font-medium">Payment Method:</span> <span
                                                        class="text-gray-800">
                                                        <%= order.paymentMethod %>
                                                    </span></div>
                                                <% if (order.couponApplied) { %>
                                                    <div><span class="font-medium">Coupon Applied:</span> <span
                                                            class="text-gray-800">
                                                            <%= order.couponCode %> (₹<%= order.couponDiscount %>)
                                                        </span></div>
                                                    <% } %>
                                            </div>
                                        </div>
                                        <!-- Right: Order Status & Price -->
                                        <div class="flex flex-col items-end min-w-[220px]">
                                            <h3 class="text-md font-semibold text-gray-800 mb-1">Order Status & Price
                                            </h3>
                                            <span class="inline-block px-3 py-1 rounded-full text-xs font-medium
                                    <%= order.status === 'Pending' ? 'bg-red-100 text-red-700' :
                                        order.status === 'Shipping' ? 'bg-yellow-100 text-yellow-700' :
                                        order.status === 'Delivered' ? 'bg-green-100 text-green-700' :
                                        order.status === 'Cancelled' ? 'bg-red-100 text-red-700' :
                                        'bg-gray-100 text-gray-700' %>">
                                                <%= order.status %>
                                            </span>
                                            <div class="text-gray-700 text-sm mt-2 space-y-1">
                                                <div><span class="font-medium">Subtotal:</span> ₹<%=
                                                        subTotal?.toFixed(2) || order.totalPrice?.toFixed(2)
                                                        || '0.00' %>
                                                </div>
                                                <div><span class="font-medium">Tax(5%) :</span> ₹<%= tax?.toFixed(2)
                                                        || '0.00' %>
                                                </div>
                                                <div><span class="font-medium">Shipping:</span> ₹<%=
                                                        shipping?.toFixed(2) || '0.00' %>
                                                </div>
                                                <% if (order.discountPrice) { %>
                                                    <div><span class="font-medium">Discount:</span> -₹<%=
                                                            order.discountPrice.toFixed(2) %>
                                                    </div>
                                                    <% } %>
                                                        <div class="text-lg font-bold text-blue-700 mt-2">Final Amount:
                                                            ₹<%= order.finalAmount?.toFixed(2) || '0.00' %>
                                                        </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Shipping Address -->
                                    <% if (order.address) { %>
                                        <div class="border-t border-gray-200 pt-4 mb-4">
                                            <h3 class="text-md font-semibold text-gray-800 mb-2">Shipping Address</h3>
                                            <div class="text-gray-700 text-sm">
                                                <div><span class="font-medium">Name:</span>
                                                    <%= order.fullName %>
                                                </div>
                                                <div><span class="font-medium">Mobile:</span>
                                                    <%= order.mobileNumber %>
                                                </div>
                                                <div><span class="font-medium">Address:</span>
                                                    <%= order.address %>, <%= order.city %>, <%= order.district %>
                                                                , <%= order.state %> - <%= order.pinCode %>
                                                </div>
                                                <% if (order.landmark) { %>
                                                    <div><span class="font-medium">Landmark:</span>
                                                        <%= order.landmark %>
                                                    </div>
                                                    <% } %>
                                                        <div><span class="font-medium">Type:</span>
                                                            <%= order.addressType %>
                                                        </div>
                                            </div>
                                        </div>
                                        <% } %>
                                            <!-- Order Summary -->
                                            <div class="border-t border-gray-200 pt-4 mb-4">
                                                <h3 class="text-md font-semibold text-gray-800 mb-2">Order Summary</h3>
                                                <div class="space-y-2">
                                                    <% order.orderedItems.forEach(function(item) { %>
                                                        <div
                                                            class="flex items-center justify-between bg-gray-50 rounded-md p-3 border border-gray-100">
                                                            <div class="flex items-center gap-3">
                                                                <img src="<%= item.productId?.productImage?.[0]?.url || '/default-image.png' %>"
                                                                    alt="<%= item.productId?.productName || 'Product' %>"
                                                                    class="w-12 h-12 object-cover rounded border border-gray-200">
                                                                <div>
                                                                    <p class="font-medium text-gray-800">
                                                                        <%= item.productId?.productName
                                                                            || 'Unnamed Product' %>
                                                                    </p>
                                                                    <p class="text-xs text-gray-600">Qty: <%=
                                                                            item.quantity %> | ₹<%=
                                                                                item.price?.toFixed(2) || 'N/A' %> each
                                                                    </p>
                                                                </div>
                                                            </div>
                                                            <div class="flex items-center gap-4">
                                                                <p class="text-gray-700 font-semibold">₹<%= item.price ?
                                                                        (item.price * item.quantity).toFixed(2) : 'N/A'
                                                                        %>
                                                                </p>
                                                                <span class="text-xs font-medium
                                                <%= item.status === 'Pending' ? 'text-red-600' :
                                                    item.status === 'Shipped' ? 'text-yellow-600' :
                                                    item.status === 'Delivered' ? 'text-green-600' :
                                                    item.status === 'Cancelled' ? 'text-red-600' :
                                                    item.status === 'Returned' ? 'text-yellow-600' :
                                                    'text-gray-600' %>">
                                                                    <%= item.status %>
                                                                </span>
                                                                <% if (item.status==='Delivered' ) { %>
                                                                    <% if (item.adminApprovalStatus==='Rejected' ) { %>
                                                                        <span class="text-xs font-medium text-red-600">
                                                                            Return Rejected Reason: <%=
                                                                                item.adminRejectionReason %>
                                                                        </span>
                                                                        <span class="text-xs font-medium text-red-600">
                                                                            Return Status: <%= item.adminApprovalStatus
                                                                                %>
                                                                        </span>
                                                                        <% } else if
                                                                            (item.returnStatus==='Return Request' ||
                                                                            item.returnStatus==='Returned' ) { %>
                                                                            <span
                                                                                class="text-xs font-medium
                                                        <%= item.adminApprovalStatus === 'Pending' ? 'text-yellow-600' :
                                                            item.adminApprovalStatus === 'Approved' ? 'text-green-600' :
                                                            item.adminApprovalStatus === 'Rejected' ? 'text-red-600' : 'text-gray-600' %>">
                                                                                Return <%= item.adminApprovalStatus %>
                                                                            </span>
                                                                            <% } else { %>
                                                                                <button
                                                                                    class="return-item-btn px-3 py-1 bg-orange-600 text-white rounded hover:bg-orange-700 transition font-medium"
                                                                                    data-order-id="<%= order.orderId %>"
                                                                                    data-item-id="<%= item._id %>">
                                                                                    Return Item
                                                                                </button>
                                                                                <% } %>
                                                                                    <% } else if
                                                                                        (order.status==='Pending' ||
                                                                                        order.status==='Shipping' ) { %>
                                                                                        <button
                                                                                            class="cancel-item-btn px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition font-medium"
                                                                                            data-order-id="<%= order.orderId %>"
                                                                                            data-item-id="<%= item._id %>">
                                                                                            Cancel Item
                                                                                        </button>
                                                                                        <% } %>
                                                            </div>
                                                        </div>
                                                        <% }); %>
                                                </div>
                                            </div>
                        </div>
                    </div>
                    <% } else { %>
                        <!-- Empty State -->
                        <div class="text-center py-16 bg-white rounded-lg shadow-md border border-gray-200">
                            <svg class="mx-auto mb-4 w-16 h-16 text-gray-300" fill="none" stroke="currentColor"
                                stroke-width="1.5" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M6 7V6a6 6 0 1112 0v1m-1 0H7m10 0a2 2 0 012 2v9a2 2 0 01-2 2H7a2 2 0 01-2-2V9a2 2 0 012-2h10z" />
                            </svg>
                            <div class="text-lg font-medium text-gray-700 mb-4">You haven't placed any orders yet.</div>
                            <a href="/viewproducts"
                                class="px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition font-medium">Start
                                Shopping</a>
                        </div>
                        <% } %>
            </main>
        </div>
        <!-- Only one SweetAlert2 script, at the end of body -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // Run after DOM is loaded
            window.onload = function () {
                // Cancel All Orders
                const cancelAllOrdersBtn = document.getElementById('cancelAllOrders');
                if (cancelAllOrdersBtn) {
                    console.log('Found Cancel All Orders button');
                    cancelAllOrdersBtn.addEventListener('click', function () {
                        console.log('Cancel All Orders button clicked');
                        const orderId = cancelAllOrdersBtn.getAttribute('data-order-id');
                        Swal.fire({
                            title: 'Cancel Order?',
                            html: `
                            <label for="cancel-reason-select" class="block mb-2 text-sm font-medium text-gray-700">Select a reason</label>
                            <select id="cancel-reason-select" class="swal2-input" style="width:100%">
                                <option value="">-- Please select --</option>
                                <option value="Accidentally placed the order">Accidentally placed the order</option>
                                <option value="Found a lower price elsewhere">Found a lower price elsewhere</option>
                                <option value="Order taking too long to deliver">Order taking too long to deliver</option>
                                <option value="Changed my mind">Changed my mind</option>
                                <option value="Other">Other</option>
                            </select>
                            <input id="cancel-reason-other" class="swal2-input" style="display:none;margin-top:8px;" placeholder="Type your reason here...">
                        `,
                            focusConfirm: false,
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, cancel it!',
                            preConfirm: () => {
                                const select = document.getElementById('cancel-reason-select');
                                const otherInput = document.getElementById('cancel-reason-other');
                                if (!select.value) {
                                    Swal.showValidationMessage('Please select a reason for cancellation');
                                    return false;
                                }
                                if (select.value === 'Other') {
                                    if (!otherInput.value.trim()) {
                                        Swal.showValidationMessage('Please enter a reason');
                                        return false;
                                    }
                                    return otherInput.value.trim();
                                }
                                return select.value;
                            },
                            didOpen: () => {
                                const select = document.getElementById('cancel-reason-select');
                                const otherInput = document.getElementById('cancel-reason-other');
                                select.addEventListener('change', function () {
                                    if (this.value === 'Other') {
                                        otherInput.style.display = '';
                                    } else {
                                        otherInput.style.display = 'none';
                                    }
                                });
                            }
                        }).then((result) => {
                            if (result.isConfirmed && result.value) {
                                fetch(`/orders/${orderId}/cancel`, {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ reason: result.value })
                                })
                                    .then(res => res.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success').then(() => location.reload());
                                        } else {
                                            Swal.fire('Error', data.message || 'Could not cancel order.', 'error');
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        Swal.fire('Error', 'An error occurred while cancelling the order.', 'error');
                                    });
                            }
                        });
                    });
                } else {
                    console.log('Cancel All Orders button NOT found');
                }

                // Cancel Item (for each item)
                const cancelItemBtns = document.querySelectorAll('.cancel-item-btn');
                console.log('Found', cancelItemBtns.length, 'Cancel Item buttons');
                cancelItemBtns.forEach(function (btn) {
                    btn.addEventListener('click', function () {
                        console.log('Cancel Item button clicked');
                        const orderId = btn.getAttribute('data-order-id');
                        const itemId = btn.getAttribute('data-item-id');
                        Swal.fire({
                            title: 'Cancel Item?',
                            html: `
                            <label for="cancel-item-reason-select" class="block mb-2 text-sm font-medium text-gray-700">Select a reason</label>
                            <select id="cancel-item-reason-select" class="swal2-input" style="width:100%">
                                <option value="">-- Please select --</option>
                                <option value="Accidentally placed the order">Accidentally placed the order</option>
                                <option value="Found a lower price elsewhere">Found a lower price elsewhere</option>
                                <option value="Order taking too long to deliver">Order taking too long to deliver</option>
                                <option value="Changed my mind">Changed my mind</option>
                                <option value="Other">Other</option>
                            </select>
                            <input id="cancel-item-reason-other" class="swal2-input" style="display:none;margin-top:8px;" placeholder="Type your reason here...">
                        `,
                            focusConfirm: false,
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, cancel item!',
                            preConfirm: () => {
                                const select = document.getElementById('cancel-item-reason-select');
                                const otherInput = document.getElementById('cancel-item-reason-other');
                                if (!select.value) {
                                    Swal.showValidationMessage('Please select a reason for cancellation');
                                    return false;
                                }
                                if (select.value === 'Other') {
                                    if (!otherInput.value.trim()) {
                                        Swal.showValidationMessage('Please enter a reason');
                                        return false;
                                    }
                                    return otherInput.value.trim();
                                }
                                return select.value;
                            },
                            didOpen: () => {
                                const select = document.getElementById('cancel-item-reason-select');
                                const otherInput = document.getElementById('cancel-item-reason-other');
                                select.addEventListener('change', function () {
                                    if (this.value === 'Other') {
                                        otherInput.style.display = '';
                                    } else {
                                        otherInput.style.display = 'none';
                                    }
                                });
                            }
                        }).then((result) => {
                            if (result.isConfirmed && result.value) {
                                fetch(`/orders/${orderId}/item/${itemId}/cancel`, {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ reason: result.value })
                                })
                                    .then(res => res.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire('Cancelled!', 'The item has been cancelled.', 'success').then(() => location.reload());
                                        } else {
                                            Swal.fire('Error', data.message || 'Could not cancel item.', 'error');
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        Swal.fire('Error', 'An error occurred while cancelling the item.', 'error');
                                    });
                            }
                        });
                    });
                });

                // Return Item (for each item)
                const returnItemBtns = document.querySelectorAll('.return-item-btn');
                console.log('Found', returnItemBtns.length, 'Return Item buttons');
                returnItemBtns.forEach(function (btn) {
                    btn.addEventListener('click', function () {
                        console.log('Return Item button clicked');
                        const orderId = btn.getAttribute('data-order-id');
                        const itemId = btn.getAttribute('data-item-id');
                        Swal.fire({
                            title: 'Return Item?',
                            input: 'select',
                            inputOptions: {
                                'Received wrong item': 'Received wrong item',
                                'Product damaged': 'Product damaged',
                                'No longer needed': 'No longer needed',
                                'Other': 'Other',
                            },
                            inputPlaceholder: 'Select a reason',
                            showCancelButton: true,
                            confirmButtonColor: '#f59e0b',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, return it!',
                            inputValidator: (value) => {
                                if (!value) {
                                    return 'Please select a reason for return';
                                }
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                fetch(`/orders/${orderId}/item/${itemId}/return`, {
                                    method: 'PATCH',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ reason: result.value })
                                })
                                    .then(res => res.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire('Return Requested!', 'Your return request has been submitted.', 'success').then(() => location.reload());
                                        } else {
                                            Swal.fire('Error', data.message || 'Could not process return request.', 'error');
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        Swal.fire('Error', 'An error occurred while processing the return request.', 'error');
                                    });
                            }
                        });
                    });
                });

                // Return Order
                const returnOrderBtn = document.getElementById('return-order-btn');
                if (returnOrderBtn) {
                    console.log('Found Return Order button');
                    returnOrderBtn.addEventListener('click', function () {
                        console.log('Return Order button clicked');
                        const orderId = returnOrderBtn.getAttribute('data-order-id');
                        Swal.fire({
                            title: 'Return Order?',
                            html: `
                            <label for="return-reason-select" class="block mb-2 text-sm font-medium text-gray-700">Select a reason</label>
                            <select id="return-reason-select" class="swal2-input" style="width:100%">
                                <option value="">-- Please select --</option>
                                <option value="Received wrong item">Received wrong item</option>
                                <option value="Item damaged or defective">Item damaged or defective</option>
                                <option value="Not satisfied with the product">Not satisfied with the product</option>
                                <option value="Changed my mind">Changed my mind</option>
                                <option value="Other">Other</option>
                            </select>
                            <input id="return-reason-other" class="swal2-input" style="display:none;margin-top:8px;" placeholder="Type your reason here...">
                        `,
                            focusConfirm: false,
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, return it!',
                            preConfirm: () => {
                                const select = document.getElementById('return-reason-select');
                                const otherInput = document.getElementById('return-reason-other');
                                if (!select.value) {
                                    Swal.showValidationMessage('Please select a reason for return');
                                    return false;
                                }
                                if (select.value === 'Other') {
                                    if (!otherInput.value.trim()) {
                                        Swal.showValidationMessage('Please enter a reason');
                                        return false;
                                    }
                                    return otherInput.value.trim();
                                }
                                return select.value;
                            },
                            didOpen: () => {
                                const select = document.getElementById('return-reason-select');
                                const otherInput = document.getElementById('return-reason-other');
                                select.addEventListener('change', function () {
                                    if (this.value === 'Other') {
                                        otherInput.style.display = '';
                                    } else {
                                        otherInput.style.display = 'none';
                                    }
                                });
                            }
                        }).then((result) => {
                            if (result.isConfirmed && result.value) {
                                fetch(`/orders/${orderId}/return`, {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ reason: result.value })
                                })
                                    .then(res => res.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire('Returned!', 'Your order return request has been submitted.', 'success').then(() => location.reload());
                                        } else {
                                            Swal.fire('Error', data.message || 'Could not process return request.', 'error');
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        Swal.fire('Error', 'An error occurred while processing the return request.', 'error');
                                    });
                            }
                        });
                    });
                } else {
                    console.log('Return Order button NOT found');
                }
            }
        </script>
</body>

</html>